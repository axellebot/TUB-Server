<?php
namespace BourgMapper\TubBundle\Entity\Repository;

use BourgMapper\TubBundle\Entity;
use Doctrine\Common\Collections\ArrayCollection as ArrayCollection;
use Doctrine\ORM\EntityRepository as EntityRepository;

/**
 * StopGroupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StopGroupRepository extends EntityRepository
{
    /**
     * @return array
     * @param $line_id
     */
    public function findStopsOfLine($line_id)
    {
        $em = $this->getEntityManager();
        $stopRepository = $em->getRepository("TubBundle:Stop");

        $results = $this->createQueryBuilder('sg')
            ->select('IDENTITY (sg.stop)')
            ->distinct()
            ->where('sg.line = :line_id')
            ->setParameter('line_id', $line_id)
            ->getQuery()
            ->getResult();

        $stops = array();

        foreach ($results as $result) {
            $id=$result[1];
            array_push($stops, $stopRepository->find($id));
        }

        return $stops;
    }

    /**
     * @return array
     * @param $stop_id
     */
    public function findLinesOfStop($stop_id)
    {

        $em = $this->getEntityManager();
        $lineRepository = $em->getRepository("TubBundle:Line");

        $results = $this->createQueryBuilder('sg')
            ->select('IDENTITY (sg.line)')
            ->distinct()
            ->where('sg.stop = :stop_id')
            ->setParameter('stop_id', $stop_id)
            ->getQuery()
            ->getResult();

        $lines = array();

        foreach ($results as $result) {
            $id=$result[1];
            array_push($lines, $lineRepository->find($id));
        }

        return $lines;
    }


}
